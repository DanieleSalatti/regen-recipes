/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YourContract1, YourContract1Interface } from "../YourContract1";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "startingPurpose",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "SetPurpose",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "N",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "purpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newPurpose",
        type: "string",
      },
    ],
    name: "setPurpose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052604051610822380380610822833981016040819052610022916100eb565b805161003590600090602084019061003c565b50506101f4565b828054610048906101ba565b90600052602060002090601f01602090048101928261006a57600085556100b0565b82601f1061008357805160ff19168380011785556100b0565b828001600101855582156100b0579182015b828111156100b0578251825591602001919060010190610095565b506100bc9291506100c0565b5090565b5b808211156100bc57600081556001016100c1565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100fe57600080fd5b82516001600160401b038082111561011557600080fd5b818501915085601f83011261012957600080fd5b81518181111561013b5761013b6100d5565b604051601f8201601f19908116603f01168101908382118183101715610163576101636100d5565b81604052828152888684870101111561017b57600080fd5b600093505b8284101561019d5784840186015181850187015292850192610180565b828411156101ae5760008684830101525b98975050505050505050565b600181811c908216806101ce57607f821691505b6020821081036101ee57634e487b7160e01b600052602260045260246000fd5b50919050565b61061f806102036000396000f3fe6080604052600436106100355760003560e01c806370740aab1461003e578063c9e525df14610069578063eb68757f1461007e57005b3661003c57005b005b34801561004a57600080fd5b5061005361009e565b60405161006091906103e8565b60405180910390f35b34801561007557600080fd5b5061003c61012c565b34801561008a57600080fd5b5061003c610099366004610418565b610247565b600080546100ab906104c9565b80601f01602080910402602001604051908101604052809291908181526020018280546100d7906104c9565b80156101245780601f106100f957610100808354040283529160200191610124565b820191906000526020600020905b81548152906001019060200180831161010757829003601f168201915b505050505081565b60408051808201909152600280825261796f60f01b602090920191825261015591600091610302565b5061020b604051806040016040528060098152602001680383ab93837b9b29d160bd1b81525060008054610188906104c9565b80601f01602080910402602001604051908101604052809291908181526020018280546101b4906104c9565b80156102015780601f106101d657610100808354040283529160200191610201565b820191906000526020600020905b8154815290600101906020018083116101e457829003601f168201915b5050505050610298565b7f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de33600060405161023d929190610503565b60405180910390a1565b805161025a906000906020840190610302565b507f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de33600060405161028d929190610503565b60405180910390a150565b6102dd82826040516024016102ae9291906105bb565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b1790526102e1565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461030e906104c9565b90600052602060002090601f0160209004810192826103305760008555610376565b82601f1061034957805160ff1916838001178555610376565b82800160010185558215610376579182015b8281111561037657825182559160200191906001019061035b565b50610382929150610386565b5090565b5b808211156103825760008155600101610387565b6000815180845260005b818110156103c1576020818501810151868301820152016103a5565b818111156103d3576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103fb602083018461039b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561042a57600080fd5b813567ffffffffffffffff8082111561044257600080fd5b818401915084601f83011261045657600080fd5b81358181111561046857610468610402565b604051601f8201601f19908116603f0116810190838211818310171561049057610490610402565b816040528281528760208487010111156104a957600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806104dd57607f821691505b6020821081036104fd57634e487b7160e01b600052602260045260246000fd5b50919050565b60018060a01b0383168152600060206040818401526000845481600182811c91508083168061053357607f831692505b858310810361055057634e487b7160e01b85526022600452602485fd5b604088018390526060880181801561056f5760018114610580576105ab565b60ff198616825287820196506105ab565b60008b81526020902060005b868110156105a55781548482015290850190890161058c565b83019750505b50949a9950505050505050505050565b6040815260006105ce604083018561039b565b82810360208401526105e0818561039b565b9594505050505056fea264697066735822122041b8e2b5e4f6ebfccea0201a798eae1ad9beb54c0e0884c91f1f5589b8ac0a1164736f6c634300080e0033";

type YourContract1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContract1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract1__factory extends ContractFactory {
  constructor(...args: YourContract1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YourContract1";
  }

  deploy(
    startingPurpose: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<YourContract1> {
    return super.deploy(
      startingPurpose,
      overrides || {}
    ) as Promise<YourContract1>;
  }
  getDeployTransaction(
    startingPurpose: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(startingPurpose, overrides || {});
  }
  attach(address: string): YourContract1 {
    return super.attach(address) as YourContract1;
  }
  connect(signer: Signer): YourContract1__factory {
    return super.connect(signer) as YourContract1__factory;
  }
  static readonly contractName: "YourContract1";
  public readonly contractName: "YourContract1";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContract1Interface {
    return new utils.Interface(_abi) as YourContract1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract1 {
    return new Contract(address, _abi, signerOrProvider) as YourContract1;
  }
}
