/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RFStorage, RFStorageInterface } from "../RFStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenSet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "AddTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenSet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "addTokenSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    name: "getTokenSetsByManager",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "managerToTokenSets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenSetToManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260405161081e38038061081e83398101604081905261002291610164565b61002b3361003a565b6100348161008a565b50610194565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610092610108565b6001600160a01b0381166100fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101058161003a565b50565b6000546001600160a01b031633146101625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f3565b565b60006020828403121561017657600080fd5b81516001600160a01b038116811461018d57600080fd5b9392505050565b61067b806101a36000396000f3fe60806040526004361061006e5760003560e01c80638da5cb5b1161004b5780638da5cb5b14610110578063a094e4971461012e578063d95dae131461014e578063f2fde38b1461016e57005b8063203177631461007757806335d7dda2146100ad578063715018a6146100fb57005b3661007557005b005b34801561008357600080fd5b50610097610092366004610570565b61018e565b6040516100a49190610592565b60405180910390f35b3480156100b957600080fd5b506100e36100c8366004610570565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100a4565b34801561010757600080fd5b50610075610204565b34801561011c57600080fd5b506000546001600160a01b03166100e3565b34801561013a57600080fd5b506100e36101493660046105df565b610218565b34801561015a57600080fd5b50610075610169366004610609565b610250565b34801561017a57600080fd5b50610075610189366004610570565b610431565b6001600160a01b0381166000908152600160209081526040918290208054835181840281018401909452808452606093928301828280156101f857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101da575b50505050509050919050565b61020c6104aa565b6102166000610504565b565b6001602052816000526040600020818154811061023457600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001600160a01b03831661029f5760405162461bcd60e51b815260206004820152601160248201527006f776e65722063616e6e6f74206265203607c1b60448201526064015b60405180910390fd5b6001600160a01b0382166102ec5760405162461bcd60e51b81526020600482015260146024820152730746f6b656e5365742063616e6e6f7420626520360641b6044820152606401610296565b806000036103325760405162461bcd60e51b8152602060048201526013602482015272076657273696f6e2063616e6e6f74206265203606c1b6044820152606401610296565b6001600160a01b03828116600090815260026020526040902054161561039a5760405162461bcd60e51b815260206004820152601760248201527f546f6b656e53657420616c7265616479206578697374730000000000000000006044820152606401610296565b6001600160a01b03838116600081815260016020818152604080842080549384018155845281842090920180549588166001600160a01b031996871681179091558084526002825292829020805490951684179094558051928352928201529081018290527f98e2321952413433fcdf0af6fc73230daedc5cdd0090137e69483fc87919e1ca9060600160405180910390a1505050565b6104396104aa565b6001600160a01b03811661049e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610296565b6104a781610504565b50565b6000546001600160a01b031633146102165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461056b57600080fd5b919050565b60006020828403121561058257600080fd5b61058b82610554565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156105d35783516001600160a01b0316835292840192918401916001016105ae565b50909695505050505050565b600080604083850312156105f257600080fd5b6105fb83610554565b946020939093013593505050565b60008060006060848603121561061e57600080fd5b61062784610554565b925061063560208501610554565b915060408401359050925092509256fea26469706673582212201a68dff92af5cfd17dde8b6dc750f74bf0fe3bf17b9e949f7ccb2a61fc93a4e064736f6c634300080d0033";

type RFStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RFStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RFStorage__factory extends ContractFactory {
  constructor(...args: RFStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RFStorage";
  }

  deploy(
    _owner: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<RFStorage> {
    return super.deploy(_owner, overrides || {}) as Promise<RFStorage>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): RFStorage {
    return super.attach(address) as RFStorage;
  }
  connect(signer: Signer): RFStorage__factory {
    return super.connect(signer) as RFStorage__factory;
  }
  static readonly contractName: "RFStorage";
  public readonly contractName: "RFStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RFStorageInterface {
    return new utils.Interface(_abi) as RFStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RFStorage {
    return new Contract(address, _abi, signerOrProvider) as RFStorage;
  }
}
