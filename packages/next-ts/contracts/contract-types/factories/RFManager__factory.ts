/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RFManager, RFManagerInterface } from "../RFManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_components",
        type: "address[]",
      },
      {
        internalType: "int256[]",
        name: "_units",
        type: "int256[]",
      },
      {
        internalType: "address[]",
        name: "_modules",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rfStorage",
    outputs: [
      {
        internalType: "contract RFStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_rfStorage",
        type: "address",
      },
    ],
    name: "setRFStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_setTokenCreator",
        type: "address",
      },
    ],
    name: "setSetTokenCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setTokenCreator",
    outputs: [
      {
        internalType: "contract ISetTokenCreator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052604051610a25380380610a2583398101604081905261002291610164565b61002b3361003a565b6100348161008a565b50610194565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610092610108565b6001600160a01b0381166100fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101058161003a565b50565b6000546001600160a01b031633146101625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f3565b565b60006020828403121561017657600080fd5b81516001600160a01b038116811461018d57600080fd5b9392505050565b610882806101a36000396000f3fe6080604052600436106100795760003560e01c80638da5cb5b1161004b5780638da5cb5b14610113578063a949dc3e14610131578063b2f9b6e514610151578063f2fde38b1461017157005b80634a2fa0a714610082578063585a31e9146100a25780635d98f71f146100de578063715018a6146100fe57005b3661008057005b005b34801561008e57600080fd5b5061008061009d366004610435565b610191565b3480156100ae57600080fd5b506002546100c2906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ea57600080fd5b506100806100f9366004610435565b6101bb565b34801561010a57600080fd5b506100806101e5565b34801561011f57600080fd5b506000546001600160a01b03166100c2565b34801561013d57600080fd5b506100c261014c366004610613565b6101f9565b34801561015d57600080fd5b506001546100c2906001600160a01b031681565b34801561017d57600080fd5b5061008061018c366004610435565b6102f8565b610199610376565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101c3610376565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6101ed610376565b6101f760006103d0565b565b6001546040516354a4ee1f60e11b815260009182916001600160a01b039091169063a949dc3e90610238908b908b908b908b908b908b90600401610785565b6020604051808303816000875af1158015610257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027b919061082f565b6002805460405163d95dae1360e01b81526001600160a01b03898116600483015280851660248301526044820193909352929350169063d95dae1390606401600060405180830381600087803b1580156102d457600080fd5b505af11580156102e8573d6000803e3d6000fd5b50929a9950505050505050505050565b610300610376565b6001600160a01b03811661036a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610373816103d0565b50565b6000546001600160a01b031633146101f75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610361565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461037357600080fd5b60006020828403121561044757600080fd5b813561045281610420565b9392505050565b803561046481610420565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104a8576104a8610469565b604052919050565b600067ffffffffffffffff8211156104ca576104ca610469565b5060051b60200190565b600082601f8301126104e557600080fd5b813560206104fa6104f5836104b0565b61047f565b82815260059290921b8401810191818101908684111561051957600080fd5b8286015b8481101561053d57803561053081610420565b835291830191830161051d565b509695505050505050565b600082601f83011261055957600080fd5b813560206105696104f5836104b0565b82815260059290921b8401810191818101908684111561058857600080fd5b8286015b8481101561053d578035835291830191830161058c565b600082601f8301126105b457600080fd5b813567ffffffffffffffff8111156105ce576105ce610469565b6105e1601f8201601f191660200161047f565b8181528460208386010111156105f657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c0878903121561062c57600080fd5b863567ffffffffffffffff8082111561064457600080fd5b6106508a838b016104d4565b9750602089013591508082111561066657600080fd5b6106728a838b01610548565b9650604089013591508082111561068857600080fd5b6106948a838b016104d4565b95506106a260608a01610459565b945060808901359150808211156106b857600080fd5b6106c48a838b016105a3565b935060a08901359150808211156106da57600080fd5b506106e789828a016105a3565b9150509295509295509295565b600081518084526020808501945080840160005b8381101561072d5781516001600160a01b031687529582019590820190600101610708565b509495945050505050565b6000815180845260005b8181101561075e57602081850181015186830182015201610742565b81811115610770576000602083870101525b50601f01601f19169290920160200192915050565b60c08152600061079860c08301896106f4565b82810360208481019190915288518083528982019282019060005b818110156107cf578451835293830193918301916001016107b3565b505084810360408601526107e3818a6106f4565b925050506107fc60608401876001600160a01b03169052565b828103608084015261080e8186610738565b905082810360a08401526108228185610738565b9998505050505050505050565b60006020828403121561084157600080fd5b81516104528161042056fea26469706673582212204da42228571c158ec8d54f1e0ad15671a4218313b5370878082e4b021888907364736f6c634300080d0033";

type RFManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RFManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RFManager__factory extends ContractFactory {
  constructor(...args: RFManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RFManager";
  }

  deploy(
    _owner: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<RFManager> {
    return super.deploy(_owner, overrides || {}) as Promise<RFManager>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): RFManager {
    return super.attach(address) as RFManager;
  }
  connect(signer: Signer): RFManager__factory {
    return super.connect(signer) as RFManager__factory;
  }
  static readonly contractName: "RFManager";
  public readonly contractName: "RFManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RFManagerInterface {
    return new utils.Interface(_abi) as RFManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RFManager {
    return new Contract(address, _abi, signerOrProvider) as RFManager;
  }
}
